{
  "articles": [
    {
      "path": "about.html",
      "title": "MATH 463 Topics In Biomathematics",
      "description": "Course Syllabus\n",
      "author": [],
      "contents": "\n\nContents\nInstructor Information\nCourse Materials:\nRequired Textbook\nAdditional Resources\n\nCourse Information:\nCourse Description\nPrerequisites\nCourse Goals\nStudent Learning Objectives and Assessment\n\nCourse Policies and Procedures:\nCoronavirus Disease Safety Pertaining to the Course\nAttendance\nAssignments and Grading\n\nCourse Timeline:\nImportant Dates\nWeekly Schedule\n\nUniversity Resources for Students:\nStudents with Disabilities\nWriting Center Services\nMy Reporting Obligation as a Responsible Employee\nNon-discrimination Statement\n\nAcademic Honesty and Integrity\nFinal Note\n\nInstructor Information\nInstructor: Dr. Jason M. Graham\nOffice: LSC 319A\nOffice Hours: Mondays 10:00 - 11:00 AM and 2:00 - 3:00 PM, and Wednesdays 10:00 - 11:00 AM (You may also make an appointment to meet with me outside of scheduled office hours. Appointments are not necessary for regularly scheduled office hours.)\nDr. Graham’s Schedule: Link\n\nEmail: jason.graham@scranton.edu\nPhone: (570) 941-7491\nCourse Materials:\nCourse Webpage: Link\nRequired Textbook\nThere is no required text for this course. Students will be provided with detailed notes, handouts, or other references.\nAdditional Resources\nThree very good general references are:\nNonlinear Dynamics and Chaos 2nd ed. by Steven H. Strogatz, ISBN: 9780813349107. This book covers most of the mathematical techniques we will use throughout the course.\nLecture Notes on Mathematical Systems Biology by Eduardo Sontag.\nMathematical Modelling in Systems Biology: An Introduction by Brian Ingalls.\nCourse Information:\nCourse Description\nA study of discrete and continuous mathematical models in biology. Topics include: population dynamics of single species and interacting species, infectious diseases, population genetics, and cell populations with tumor modeling.\nPrerequisites\nThe prerequisites for this course is MATH 341 Differential Equations and MATH 351 Linear Algebra. Specifically, the student is expected to have a knowledge of the theory and applications of elementary linear algebra and basic ordinary differential equations (ODEs).\nCourse Goals\nStudents will gain college level knowledge in applied mathematics.\nStudents will be able to apply mathematics to address real world problems.\nStudents will gain competency in analytical and critical reasoning.\nStudents will gain experience in utilizing R to create programs and solve problems as appropriate to the discipline of Biomathematics.\nStudents will gain experience using \\(\\LaTeX\\) to prepare and revise written documents as appropriate to the discipline of Biomathematics.\nStudent Learning Objectives and Assessment\n\n\nAfter taking this course, the student should be able to:\n\n\nMethods of assessment\n\n\nUse mathematical tools from calculus, differential equations, and linear algebra to analyze foundational mathematical models arising in the life sciences.\n\n\nHomework assignments and in-class written exams.\n\n\nInterpret the meaning of mathematical equations or models representing various biological processes.\n\n\nHomework assignments, model reports, and final project.\n\n\nUtilize computing tools such as R to analyze and interpret data-driven mathematical models.\n\n\nHomework assignments, model reports, and final project.\n\n\nCommunicate effectively in writing their work in applying the techniques of applied mathematics to problems arising in the life sciences.\n\n\nHomework, model reports, and final project consisting of a written paper.\n\n\nLink with Mathematics Program Learning Outcomes\nThe student learning objectives of this course are linked with the Mathematics Program Learning Outcome\n“Demonstrate competence in analytical and critical reasoning.”\n“Demonstrate college-level knowledge in applied mathematics.”\nLink with General Education Goals and Objectives\nMATH 463 has been designated an EPW Level II course. In order to fulfill the learning objectives for EPW Level II students will be asked to complete two writing intensive assignments. These are\na model report assignment,\nand a final project.\nDetails for these assignments are described below and additional guidelines are posted on thee course learning management system.\nCourse Policies and Procedures:\nCoronavirus Disease Safety Pertaining to the Course\nIn consideration of the care and concern for one another and members of our community, unless you are reasonably unable to do so, please take the following steps as a student in this course to mitigate the spread of coronavirus:\nDo not attend class if you have a confirmed case of coronavirus disease (COVID-19) until you have fully recovered.\nDo not attend class if you are experiencing any COVID-19 related symptoms as described at this link.\nDo not attend class if you believe that you have been exposed to the coronavirus and might spread it to members of the class. Please visit this link for information on the transmission of the coronavirus.\nWear a CDC approved face covering over your mouth and nose while in the classroom and while visiting the course instructor’s office.\nAttendance\nClass attendance and active participation in class discussion is strongly encouraged. If absence is necessary, please inform the instructor and develop a plan to make up for missing content as soon as possible.\nAssignments and Grading\nGrade Policy\nThe course grade will be based on two in-class exams (totaling 50% and evenly distributed), approximately ten weekly homework assignments (20%), one model report (10%), and a final project (20%).\nGrade Scale\nLetter grades will be assigned based on the following scale:\n\n\nGrade Range\n\n\nLetter Grade\n\n\n94-100\n\n\nA\n\n\n90-93\n\n\nA-\n\n\n87-89\n\n\nB+\n\n\n83-86\n\n\nB\n\n\n80-82\n\n\nB-\n\n\n76-79\n\n\nC+\n\n\n72-75\n\n\nC\n\n\n69-71\n\n\nC-\n\n\n65-68\n\n\nD+\n\n\n60-64\n\n\nD\n\n\n<60\n\n\nF\n\n\nHomework\nThere will be weekly homework assignments. Assignments will be posted on the course learning management system and made up of problems relating to or extending the material covered in class discussions. Working problems is essential to learning the material and doing well on exams.\nDo not underestimate the value (and joy) of carefully working through homework problems.\nExams\nThe in-class exams are meant to assess 1) students’ understanding of the material covered in class and in homework assignments, 2) students’ understanding of the core concepts, 3) students’ problem solving abilities, and 4) students’ ability to think independently. Exam 1 is scheduled for March 2, and Exam 2 is scheduled for May 4. In writing the tests, I assume that you have been studying the material at least 6 hours per week outside of class.\nModel Report\nAs part of the required coursework for Topics in Biomathematics, students are required to submit a model report. The goal of this assignment is for students to read, understand, assess, and explain modeling results from a recently published paper in biomathematics. The model report will make up 10% of the course grade. Students must submit at least two drafts of a model report. A model report should be three-five typed pages and prepared using \\(\\LaTeX\\). The first draft is due March 23 and the final draft is due May 4. A set of guidelines for the model report is posted on the course learning management system.\nFinal Project\nIt should be recognized that the mathematical techniques developed in class are applicable in broader situations than can be covered in lectures and homework. Thus, students are asked to individually explore a topic in biomathematics beyond what is covered in lecture by means of a final project. Final projects should be an 8-12 page manuscript typed using \\(\\LaTeX\\), and students must submit at least two drafts of their written final projects. The final draft is due no later than 5:00pm on Wednesday May 18. All written and presented work must be original, explained in your own words, and use proper citation for works referenced.\nA set of guidelines for the final project is posted on the course learning management system. You must choose a topic for your final project and submit a one to two paragraph description of your proposed project along with at least two scholarly references to me no later than 3:00pm on March 2.\nUse of Digital Technology\nWork and research in Biomathematics requires professionals in the field to make use of digital technology. The primary uses of digital technology in Biomathematics is for producing and importing data, scientific computing, visualization of data and model-based simulations, and preparing written documents to explain mathematical results. Two of the most commonly used technological tools are R for scientific computing and \\(\\LaTeX\\) for written document preparation. Students in this course will be expected to use R, and \\(\\LaTeX\\). R can be installed to any platform via the downloads available here. R is best used with the integrative development environment RStudio which can be installed from here.\nCourse Timeline:\nImportant Dates\n\n\nEvent\n\n\nDate\n\n\nClasses begin\n\n\nWednesday, January 26\n\n\nLast day to add classes\n\n\nTuesday, February 1\n\n\nLast day for 100% tution refund\n\n\nFriday, February 4\n\n\nLast day to drop with no grade\n\n\nFriday February 25\n\n\nExam 1\n\n\nWednesday, March 2\n\n\nSemester Midpoint\n\n\nFriday, March 11\n\n\nLast day of class before spring break\n\n\nFriday, March 11\n\n\nClasses resume after spring break\n\n\nMonday, March 21\n\n\nLast day to withdraw with W grade\n\n\nWednesday, April 13\n\n\nLast day of class before Easter break\n\n\nWednesday, April 13\n\n\nClasses resume after Easter\n\n\nTuesday, April 19\n\n\nExam 2\n\n\nWednesday, May 4\n\n\nLast day of class\n\n\nFriday, May 13\n\n\nFinal exams begin\n\n\nMonday, May 16\n\n\nFinal exams end\n\n\nFriday, May 20\n\n\nWeekly Schedule\nWeek 1: Introduction to Biomathematics\nWeek 2: Basic Biomathematical Workflow\nWeek 3: Introduction to Mathematical Modeling\nWeek 4: Population Models\nWeek 5: Compartment Models\nWeek 6: SIR Type Models\nWeek 7: Exam 1\nWeek 8: The Chemostat Bio-reactor\nWeek 9: Spring Break\nWeek 10: Functional Forms\nWeek 11: Mass Action and Reaction Kinetics\nWeek 12: Dimensional Analysis\nWeek 13: Phase-Plane Methods\nWeek 14: Mathematical Physiology\nWeek 15: Exam 2\nWeek 16: Additional Topics\nWeek 17: Finals Week\nUniversity Resources for Students:\nStudents with Disabilities\nReasonable academic accommodations may be provided to students who submit relevant and current documentation of their disability. Students are encouraged to contact the Center for Teaching and Learning Excellence (CTLE) at disabilityservices@scranton.edu or (570) 941-4038 if they have or think they may have a disability and wish to determine eligibility for any accommodations. For more information, please visit http://www.scranton.edu/disabilities.\nWriting Center Services\nThe Writing Center focuses on helping students become better writers. Consultants will work one-on-one with students to discuss students’ work and provide feedback at any stage of the writing process. Scheduling appointments early in the writing progress is encouraged.\nTo meet with a writing consultant, call (570) 941-6147 to schedule an appointment, or send an email with your available meeting times, the course for which you need assistance, and your phone number to: writing-center@scranton.edu. The Writing Center does offer online appointments for our distance learning students. Please contact Amye Archer at amye.archer@scranton.edu for more information.\nMy Reporting Obligation as a Responsible Employee\nAs a faculty member, I am deeply invested in the well-being of each student I teach. I am here to assist you with your work in this course. Additionally, if you come to me with other non-course-related concerns, I will do my best to help. It is important for you to know that all faculty members are required to report incidents of sexual harassment or sexual misconduct involving students. This means that I cannot keep information about sexual harassment, sexual assault, sexual exploitation, intimate partner violence or stalking confidential if you share that information with me. I will keep the information as private as I can but am required to bring it to the attention of the University’s Title IX Coordinator, Elizabeth M. Garcia, or Deputy Title IX Coordinator, Christine M. Black, who, in conversation with you, will explain available support, resources, and options. I will not report anything to anybody without first letting you know and discussing choices as to how to proceed. The University’s Counseling Center (570-941-7620) is available to you as a confidential resource; counselors (in the counseling center) do not have an obligation to report to the Title IX Coordinator.\nNon-discrimination Statement\nThe University is committed to providing an educational, residential, and working environment that is free from harassment and discrimination. Members of the University community, applicants for employment or admissions, guests, and visitors have the right to be free from harassment or discrimination based on race, color, religion, ancestry, gender, sex, pregnancy, sexual orientation, gender identity or expression, age, disability, genetic information, national origin, veteran status, or any other status protected by applicable law.\nStudents who believe they have been subject to harassment or discrimination based on any of the above class of characteristics, or experience sexual harassment, sexual misconduct or gender discrimination should contact Elizabeth M. Garcia, Title IX Coordinator, (570) 941-6645 elizabeth.garcia2@scranton.edu, Deputy Title IX Coordinators Christine M. Black (570) 941-6645 christine.black@scranton.edu, or Ms. Lauren Rivera, AVP for Student Life and Dean of Students, at (570)941-7680 lauren.rivera@scranton.edu. The United States Department of Education’s Office for Civil Rights (OCR) enforces Title IX. Information regarding OCR may be found at <www.ed.gov/about/offices/list/ocr/index.html>\nThe University of Scranton Sexual Harassment and Sexual Misconduct Policy can be found online at https://www.scranton.edu/diversity. All reporting options and resources are available at https://www.scranton.edu/CARE.\nAbout Pronouns\nIt is easy to make assumptions about what pronouns people prefer, but we try not to! Please tell us in class or via a private email if you would like to let us know what your pronouns are, if/when you would like us (and others) to use them, and certainly feel free to correct us or others if we make a mistake. Using the pronouns that a person has indicated they prefer is considered both professional and polite, and as such we ask that all members of our class use the appropriate pronouns.\nIf you have questions about this, please feel free to look up more information here (https://www.mypronouns.org/) or email jason.graham@scranton.edu with any questions.\nAcademic Honesty and Integrity\nEach student is expected to do their own work. It is also expected that each student respect and abide by the Academic Code of Honesty as set forth in the University of Scranton student handbook. Conduct that violates the Academic Code of Honesty includes plagiarism, duplicate submission of the same work, collusion, providing false information, unauthorized use of computers, theft and destruction of property, and unauthorized possession of tests and other materials. Steps taken in response to suspected violations may include a discussion with the instructor, an informal meeting with the dean of the college, and a hearing before the Academic Dishonesty Hearing Board. Students who are found to have violated the Code will ordinarily be assigned the grade F by the instructor and may face other sanctions. The complete Academic Code of Honesty is located on the University website at https://www.scranton.edu/academics/wml/acad-integ/acad-code-honesty.shtml.\nFinal Note\nThe instructor reserves the right to modify this syllabus; students will immediately be notified of any such changes and an updated syllabus will be made available to the class via the course learning management system.\n\n\n\n",
      "last_modified": "2022-01-20T14:43:59-05:00"
    },
    {
      "path": "index.html",
      "title": "Topics in Biomathematics",
      "description": "Welcome to the website for MATH 463 Topics in Biomathematics!\n",
      "author": [],
      "contents": "\nWhat is MATH 463?\nMATH 463 Topics in Biomathematics, is a course taught at the University of Scranton. See the course syllabus for more information. This site is a home for many of the course materials developed by Jason M. Graham in teaching MATH 463 since 2013.\nWhat is Biomathematics?\nBiomathematics is concerned with the use of mathematical methods (e.g., linear algebra, differential equations, dynamical systems, and probability theory) to understand phenomenon in the life sciences, it is part of the larger field of mathematical and theoretical biology. Mathematical and theoretical biology provide a solid foundation for computational and quantitative approaches to investigations in biology and medicine.\n\n\n\n",
      "last_modified": "2022-01-20T14:44:00-05:00"
    },
    {
      "path": "notes001.html",
      "title": "Course Notes 1",
      "description": "Introduction to Biomathematics\n",
      "author": [
        {
          "name": "Jason M. Graham",
          "url": "https://topicsinbiomath.netlify.app/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nTopics in Biomathematics\nLecture Notes\nCourse Projects\nThe Use of R\n\nWhat is Biomathematics?\nFurther Reading\nBasic Texts in Biomathematics\nMathematical Population Dynamics\nMathematical Physiology\nMathematical Techniques and Computing\nApproaches not Covered in Class\nResearch in Biomathematics\n\n\nTopics in Biomathematics\nWelcome to Topics in Biomathematics! The set of notes to which this document belongs have been developed from a course, MATH 463 Topics in Biomathematics, taught at the University of Scranton since 2013. The purpose of this course is to provide students having a background in linear algebra and differential equations with a grounding in mathematical modeling for biological phenomenon. We hope that these notes may also be useful for a somewhat wider audience of individuals that are interested in mathematical or theoretical biology, or areas of applied mathematics that consider scientific problems from biology or medicine.\nLecture Notes\nThere are several reasons for the existence of these notes. The principal ones are\nto provide a reference that strikes a desired balance between the subjects of mathematics and science,\nto provide a reference that includes discussion of some important topics from mathematical modeling that are relevant in contexts more general than just mathematical biology,\nto provide a reference that helps to bridge the gap that is necessary to close in order to begin reading the research literature, and\nto provide a reference that encourages good work flow practices such as integrating analysis, computing, and the written presentation of results.\nCourse Projects\nWhen teaching MATH 463 Topics in Biomathematics, an important component of the course is student projects. There are two different types of projects that students in Topics in Biomathematics are asked to complete: model reports, and a final independent project. The model reports are meant for students to get early exposure to reading research literature that involves the development or application of mathematical models in biology and medicine. The idea is for students to get experience with the “translation” process of going from a real world biological problem to a mathematical abstraction and back again. Furthermore, students are asked to think and write critically about a mathematical model published in a recent research article. One might reasonably view the model report assignment as asking students to write a peer-review referee report for a manuscript that has already been reviewed and published.\nThe final independent project is meant as a capstone to the course. It is not the expectation that every student will do an entirely original research project that involves developing a novel mathematical model from scratch, although in practice this does occur fairly often. However, the final project requires a more substantial synthesis of scientific and mathematical knowledge and understanding than the model report or other assignments such as homework or written exams.\nThis is all meant to highlight the fact that throughout these set of lecture notes, we have tried to provide pointers to current or at least fairly recent research that is reasonably accessible to the average student in MATH 463 in order to facilitate the model report and final independent projects. Every time we discuss a topic in the notes, we follow the discussion up with specific references where students may go to in order to learn more, acquire project ideas, and see what else is out there regarding mathematical and theoretical biology.\nThe Use of R\nThroughout these notes and the Topics in Biomathematics course we make regular use of the R software and ecosystem for computing. It is impossible to do very much interesting work in science and applied mathematics, including mathematical and theoretical biology, without computation. For the purposes of this course, we will need to employ numerical methods for solving equations, optimization, and linear algebra. In addition, we will find it very helpful to be able to create visualizations that are simple yet professional in appearance. The R environment and language possesses several features that make it highly appropriate for all of these purposes. Among it’s many advantages, R is also freely available.\nIn addition to R, we also use RStudio, an integrated development environment that enhances the use of R. Using RStudio makes it possible to access the Topics in Biomathematics lecture notes in an interactive fashion because all of the notes are written as R Markdown notebooks. This allows us to integrate text, equations, figures, R code, plots, etc. and to compile the result as both html and pdf files. On top of that, students will have a template they can follow in order to write and present their work for the model report and independent final projects.\nWhat is Biomathematics?\nBiomathematics is concerned with the use of mathematical methods (e.g., linear algebra, differential equations, dynamical systems, and probability theory) to understand phenomenon in the life sciences, it is part of the larger field of mathematical and theoretical biology. Mathematical and theoretical biology provide a solid foundation for computational and quantitative approaches to investigations in biology and medicine. The general work flow in biomathematics proceeds as follows:\nStart with some real world phenomenon of interest from the life sciences.\nAbstract from the real world in order to highlight essential features, mechanisms, processes, etc. with the goal of answering some specific question or solving some particular problem. This typically involves making some set of simplifying assumptions about the biological world.\nRepresent your abstraction from step 2 mathematically, say for example as a system of equations. This typically involves the construction of a mathematical model.\nApply rigorous techniques from applied mathematics or scientific computing in order to understand the mathematical representation in step 3 with the goal of using it to solve a problem or answer a question.\nPlace your results from step 4 in the context of the original real world biological phenomenon.\nIt may be necessary to repeat steps 2-5 multiple times with refinements at each iteration in order for your efforts to yield something that is truly useful for addressing a scientific question.\nBiomathematics, which for the purposes of this course we consider synonymous with mathematical biology, emerges as a distinct field due to the fact that carrying out the previously described steps has resulted in the (continuing) development of some common methods and terminology. Furthermore, we carefully distinguish biomathematics from the field of biostatistics. While biomathematics certainly involves the use of probability and statistics, these areas play a different role within biomathematical investigations than they do in biostatistical investigations. Additionally, the relationship between theory and experiment is different in biomathematics than in biostatistics.\nIn the next lecture, we will spend some more time fleshing out the steps of the basic biomathematical workflow. From there, we will begin to examine some general principles related to the construction of mathematical models. That is, we will study those ideas from mathematical modeling that are essential for biomathematics. Our goal is to get to a point where developing a mathematical model and using it to answer some biological question does not seem like an impossible task.\nFurther Reading\nThroughout this course, you are encouraged to look at additional references for the purposes of seeing the perspectives of others and for learning about topics and methods that are not covered explicitly in lectures or assigned reading. The following sections provide an overview of some additional texts you might want to examine at some point.\nBasic Texts in Biomathematics\nSeveral established textbooks in biomathematics are widely available. See for example, (Allen 2007; Britton 2003; de Vries et al. 2006; Edelstein-Keshet 2005; Friedman and Kao 2014; Murray 2002, 2003). The two-volume text by Murray, (Murray 2002, 2003), is considered something of a standard, the books cover a variety of different topics well beyond what we can, but assume a greater mathematical background than we do in this course. There are also several nice sets of lecture notes that are available online for free, such as those by Byrne, Chasnov, Goldstein and Pedley, Ingalls, and Sontag.\nMathematical Population Dynamics\nThe earliest motivations for the development of biomathematics comes from theoretical ecology and population dynamics. A sub-area of these fields is mathematical epidemiology. Excellent references for learning more about these fields are provided by(Brauer and Castillo-Chavez 2012; Kot 2001).\nMathematical Physiology\nMathematical physiology is another large sub-discipline within biomathematics. A standard reference is provided by (Keener and Sneyd 2009b, 2009a). Note that mathematical physiology intersects with biophysics and biochemistry.\nNeuronal Dynamics\nAn important and well-developed topic in mathematical physiology and biophysics is mathematical and computational neuroscience. Excellent references for this field are (Börgers 2017; Ermentrout and Terman 2010). You are also encouraged to watch the videos from two conference talks on Brain Control and Modeling Large Scale Brain Activity.\nMathematical Techniques and Computing\nIn this course, we will primarily use techniques from linear algebra and ordinary differential equations. In much of our study of mathematical models arising in biomathematics, we will be equally interested in qualitative and quantitatve results. The area of applied mathematics known as dynamical systems theory provides the mathematical techniques for a qualitative analysis of mathematical models. During the course, we will need to develop and employ some techniques for differential equations that may not be covered in a first course in ODEs. The following two references may be very helpful in learning more about applied dynamical systems and differential equations as they relate to biomathematics (Jones, Plank, and Sleeman 2010; Strogatz 2015).\nWhen it comes to both the quantitative and qualitative analysis of differential equation models, it is very helpful to do so with the aid of a computer. Both the R language for statistical computing and the Julia language for scientific computing are excellent for our purposes. Each of these has an associated ecosystem with packages that help make mathematical modeling and analysis easier. In this course, we primarily use R because of the phaseR package for the phase-line and phase-plane analysis of one- and two-dimensional systems of differential equations. Furthermore, the notes for this course are written using the RStudio integrated development environment associated with R. Thus, using R and RStudio allows the reader to go through these notes interactively to enhance the learning experience.\nApproaches not Covered in Class\nThere are many different classes of mathematical models and a variety of different approaches to biomathematics. Notably absent from the main discussion in this course is stochastic models (an excellent reference with applications in biology is provided by (Allen 2011)) and game theory.\nResearch in Biomathematics\nBiomathematics and related fields are active areas of research in which there are new peer-reviewed articles appearing on a daily basis. The Society for Mathematical Biology is a great source for information on what is happening in the field of biomathematcs. If you are interested to see what is going on at the cutting edge, you might also want to look at some of the following links:\nJournal of Mathematical Biology\nJournal of Theoretical Biology\nBulletin of Mathematical Biology\nMathematical Biosciences and Engineering\nPLos Computational Biology\narXiv on Quantitative Biology\n\n\n\nAllen, Linda J. S. 2007. Introduction to Mathematical Biology. Pearson/Prentice Hall. https://agris.fao.org/agris-search/search.do?recordID=US201300115181.\n\n\n———. 2011. An Introduction to Stochastic Processes with Applications to Biology. Second. CRC Press, Boca Raton, FL. https://mathscinet.ams.org/mathscinet-getitem?mr=2560499.\n\n\nBörgers, Christoph. 2017. An Introduction to Modeling Neuronal Dynamics. Vol. 66. Texts in Applied Mathematics. Springer, Cham. https://doi.org/10.1007/978-3-319-51171-9.\n\n\nBrauer, Fred, and Carlos Castillo-Chavez. 2012. Mathematical Models in Population Biology and Epidemiology. Second. Vol. 40. Texts in Applied Mathematics. Springer, New York. https://doi.org/10.1007/978-1-4614-1686-9.\n\n\nBritton, Nicholas F. 2003. Essential Mathematical Biology. Springer Undergraduate Mathematics Series. Springer-Verlag London, Ltd., London. https://doi.org/10.1007/978-1-4471-0049-2.\n\n\nEdelstein-Keshet, Leah. 2005. Mathematical Models in Biology. Vol. 46. Classics in Applied Mathematics. Society for Industrial and Applied Mathematics (SIAM), Philadelphia, PA. https://doi.org/10.1137/1.9780898719147.\n\n\nErmentrout, G. Bard, and David H. Terman. 2010. Mathematical Foundations of Neuroscience. Vol. 35. Interdisciplinary Applied Mathematics. Springer, New York. https://doi.org/10.1007/978-0-387-87708-2.\n\n\nFriedman, Avner, and Chiu-Yen Kao. 2014. Mathematical Modeling of Biological Processes. Springer.\n\n\nJones, D. S., M. J. Plank, and B. D. Sleeman. 2010. Differential Equations and Mathematical Biology. Chapman & Hall/CRC Mathematical and Computational Biology Series. CRC Press, Boca Raton, FL. https://mathscinet.ams.org/mathscinet-getitem?mr=2573923.\n\n\nKeener, James, and James Sneyd. 2009a. Mathematical Physiology. Vol. I: Cellular Physiology. Second. Vol. 8/. Interdisciplinary Applied Mathematics. Springer, New York. https://doi.org/10.1007/978-0-387-79388-7.\n\n\n———. 2009b. Mathematical Physiology. Vol. II: Systems Physiology. Second. Vol. 8/. Interdisciplinary Applied Mathematics. Springer, New York. https://doi.org/10.1007/978-0-387-79388-7_1.\n\n\nKot, Mark. 2001. Elements of Mathematical Ecology. Cambridge University Press, Cambridge. https://doi.org/10.1017/CBO9780511608520.\n\n\nMurray, J. D. 2002. Mathematical Biology. I. Third. Vol. 17. Interdisciplinary Applied Mathematics. Springer-Verlag, New York. https://mathscinet.ams.org/mathscinet-getitem?mr=1908418.\n\n\n———. 2003. Mathematical Biology. II. Third. Vol. 18. Interdisciplinary Applied Mathematics. Springer-Verlag, New York. https://mathscinet.ams.org/mathscinet-getitem?mr=1952568.\n\n\nStrogatz, Steven H. 2015. Nonlinear Dynamics and Chaos. Second. Westview Press, Boulder, CO. https://mathscinet.ams.org/mathscinet-getitem?mr=3837141.\n\n\nVries, Gerda de, Thomas Hillen, Mark Lewis, Johannes Müller, and Birgitt Schönfisch. 2006. A Course in Mathematical Biology. Vol. 12. Mathematical Modeling and Computation. Society for Industrial and Applied Mathematics (SIAM), Philadelphia, PA. https://doi.org/10.1137/1.9780898718256.\n\n\n\n\n",
      "last_modified": "2022-01-20T14:44:01-05:00"
    },
    {
      "path": "notes002.html",
      "title": "Course Notes 2",
      "description": "Basic Biomathematical Work Flow\n",
      "author": [
        {
          "name": "Jason M. Graham",
          "url": "https://topicsinbiomath.netlify.app/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nOverview\nSimple Population Growth\nGeneral Model of Inflammation\nFurther Reading\nMathematical Models for Population Growth\nMathematical Models of Inflammation\n\n\nOverview\nIn the previous lecture, we introduced the basic work flow of biomathematics:\nStart with some real world phenomenon of interest from the life sciences.\nBy making some set of simplifying assumptions, abstract from the real world in order to highlight essential features for the purposes of answering some specific question or solving some particular problem.\nRepresent your abstraction from step 2 as a mathematical model.\nUse techniques from applied mathematics or scientific computing in order to understand the mathematical representation in step 3 with the goal of solving a problem or answering a question.\nPlace your results from step 4 in the context of the original real world biological phenomenon.\nIn this lecture, we will illustrate these steps by way of two examples. One is an extremely simple example about population growth, while the other is an example from a paper concerned with understanding general features of the inflammatory process (Herald 2010).\nSimple Population Growth\nIndividual organisms typically belong to a population. Understanding the growth of a population is important for understanding the ecology and evolution of organisms. In particular, one may want to know about factors that lead to the extinction of a species. Of course, a population of organisms belongs to an ecosystem in which it interacts with its environment and other species. Before we get carried away and try to understand an entire ecosystem, it is useful to theorize about how a single-species population may change as a function of time.\nConsider a simple isolated and homogeneous population. Let \\(N(t)\\) denote the number (or sometimes density) of individuals in the population at time \\(t\\). For simplicity we will assume that \\(N\\) is a continuous and differentiable function of the continuous variable \\(t\\). Later we will reflect on these assumptions and discuss modifications that could be made if necessary. We define\n\\(\\text{per capita rate of change} = \\frac{1}{N}\\frac{dN}{dt}\\)\nnoting that this quantity has units of \\(\\frac{1}{\\text{time}}\\). The point is that we can arrive at a mathematical model for the growth of a population by specifying a formula for the per capita rate of change. Let’s begin with the simplest assumption that we can possibly make, suppose that the per capita rate of change is constant. That is, suppose\n\\(\\frac{1}{N}\\frac{dN}{dt} = r\\).\nThen,\n\\(\\frac{dN}{dt} = rN\\).\nLet’s make two observations about this last equation:\nIf \\(r > 0\\), then \\(rN >0\\) (populations are always positive so we assume implicitly that \\(N > 0\\)) and thus \\(\\frac{dN}{dt} > 0\\). Therefore, if the constant rate \\(r > 0\\), then the population will always be increasing. On the other hand, if \\(r < 0\\), then the population will always be decreasing.\nReflection: Sketch the graph of a function that is always positive and always increasing. Sketch the graph of a function that is always positive and always decreasing.\nGiven an initial value of the population \\(N(0) = N_0\\), \\(N(t) = N_{0}e^{rt}\\) satisfies the differential equation \\(\\frac{dN}{dt} = rN\\).\nReflection: Take a moment to verify this by substituting \\(N(t) = N_{0}e^{rt}\\) into both sides of the equation. In the homework you will be asked to derive this solution using the method of separation. (Chances are that you have done this before.)\nLet’s look at the graph of \\(N(t) = N_{0}e^{rt}\\):\n\n\n\nFigure 1:  Exponential growth model results.\n\n\n\n(Note: It is worth the effort to remember forever and all time that the solution of the differential equation\n\\(\\frac{dx}{dt} = ax\\),\nwith initial condition \\(x(0)=x_0\\) is \\(x(t) = x_{0}e^{at}\\).)\nBased on our observations, we see that a population that obeys the model \\(\\frac{dN}{dt}=rN\\) will grow (if \\(r > 0\\)) or decay (if \\(r < 0\\)) in an exponential fashion.\nAn obvious question is, what determines if \\(r\\) is positive or negative? One way to make sense of this is to think of \\(r\\) as the difference between the per capita birth rate \\(b\\) and the per capita death rate \\(d\\) so that \\(r=b-d\\). Then \\(r > 0\\) if \\(b > d\\) and \\(r < 0\\) if \\(b < d\\). Thus, a population is predicted to go extinct (in the long run as \\(t \\rightarrow \\infty\\)) if the per capita death rate is greater than the per capita birth rate.\nOne problem with the model is that long term exponential growth is unrealistic. The survival of a real population depends on resources such as food and water. An exponentially growing population would soon deplete all available resources. On the other hand, it is not unrealistic for a population to initially grow exponentially when the population numbers are very small relative to the availability of resources. Later on we will discuss ways to adjust the model so that growth is exponential when the population is small but slows as the population increases.\nNotice how we hit each step of the biomathematics work flow during the course of our discussion on population growth. We began with a real world phenomenon, abstracted to an isolated homogeneous population, wrote down a mathematical model, derived information from the model and cast that information in the context of the original real world phenomenon. Let’s look at another example of how the biomathematics work flow plays out in the context of more recent research.\nGeneral Model of Inflammation\nInflammation is a normal part of the immune response for defense against invasion by foreign cells or molecules. However, inflammation may become chronic and lead to disease, sepsis, and even death. For the purposes of both treatment and prevention of disease, it is important to understand the conditions that lead to chronic inflammation.\nWithout going into the biological and chemical details, we know that inflammation is controlled and mediated by immune cells (the macrophage) whose behavior is regulated by signaling molecules known as cytokines. Thus, it is reasonable for the purposes of abstraction to encapsulate the immune response by the activities of macrophage cells, cytokines, and an invading body such as a bacteria cell. This is exactly what is done in the paper (Herald 2010).\nFigure 2 shows a schematic corresponding to our abstraction of the immune response. The macrophage cell population responds to bacterial invasion and produces cytokines that mediate the immune response. The exact details of the interactions are governed by model parameters and mathematical relationships between the interacting cell populations and cytokines.\n\n\n\nFigure 2:  Schematic of inflammation model. This corresponds roughly to Figure 1 in (Herald 2010).\n\n\n\nIn (Herald 2010), the author converts the model diagram into a mathematical model in the form of a coupled system of nonlinear differential equations shown here:\n\\[\\begin{align}\n\\frac{dM}{dt} &= s + \\frac{r C}{1 + k_{1} C} - m_{d} M, \\\\\n\\frac{dC}{dt} &=  p_{c} B M + M \\frac{a C}{(1 + k_{2} C)}\\frac{1}{(1 + k_{3} A)} - c_{d} C,\\\\\n\\frac{dA}{dt} &=  p_{a} C M - a_{d} A, \\\\ \n\\frac{dB}{dt} &= g B - b_{d} M B.\n\\end{align}\\]\nLater on in the course we will study this model in more detail. For now, note that\n\\(M\\) - macrophage cell population\n\\(C\\) - inflammatory cytokine concentration\n\\(A\\) - anti-inflammatory cytokine concentration\n\\(B\\) - bacteria cell population\nIn the paper, the author uses the model equations to show that under a certain set of circumstances a bacterial pathogen will not provide a sufficient trigger to cause chronic inflammation. On the other hand, if conditions are right, even a minor bacterial infection can lead to chronic inflammation. We leave the details of the analysis for later in the course. Notice that this example contains all of the components of the basic biomathematics work flow.\nThe real world phenomenon of interest from the life sciences is inflammation.\nFigure 2 corresponds to an abstraction of the biochemical details of the immune system highlighting what is thought to be the essential features of the inflammatory response.\nClearly there is a mathematical model. A major portion of this course is devoted to understanding how one might come up with such a system of equations. These were not simply pulled out of thin air.\nIn (Herald 2010), the author uses techniques from dynamical systems and bifurcation theory in order to derive useful information from the model equations.\nThe author’s analysis of the model system explains some aspects of inflammation and pinpoints conditions that lead to chronic inflammation. The authors work also explains why certain therapies for chronic inflammation are not successful.\nThere are still many questions about inflammation to be addressed beyond what is done in (Herald 2010). However, in order to make progress more details of the immune response may need to be included. This will involve either modifying the system of equations displayed in this section, or using a different mathematical model altogether. For now, the point to take away is that, often times, this is how work in biomathematics proceeds. In the next lecture, we will start to learn some essential principles of mathematical modeling that will help us to see where equations such as the ones presented in this section come from.\nFurther Reading\nFor those that want to learn more about the topics discussed in this lecture, we provide here some relevant references.\nMathematical Models for Population Growth\nIntroductions to mathematical models for population growth may be found in most of the standard texts in biomathematics. Good places to start are (Allen 2007; Britton 2003; Edelstein-Keshet 2005). The textbook (Kot 2001) is entirely devoted to population models. An important application of population growth models is to cancer biology where one is interested to understand the growth of tumor cell populations. Two papers that examine population growth models in the context of tumor cell growth are (Gerlee 2013; Sarapata and de Pillis 2014).\nMathematical Models of Inflammation\nMathematical modeling of inflammation is an area of current research. In addition to the paper already referenced, (Herald 2010), we also recommend (Day et al. 2006; Reynolds et al. 2006).\n\n\n\nAllen, Linda J. S. 2007. Introduction to Mathematical Biology. Pearson/Prentice Hall. https://agris.fao.org/agris-search/search.do?recordID=US201300115181.\n\n\nBritton, Nicholas F. 2003. Essential Mathematical Biology. Springer Undergraduate Mathematics Series. Springer-Verlag London, Ltd., London. https://doi.org/10.1007/978-1-4471-0049-2.\n\n\nDay, Judy, Jonathan Rubin, Yoram Vodovotz, Carson C. Chow, Angela Reynolds, and Gilles Clermont. 2006. “A Reduced Mathematical Model of the Acute Inflammatory Response. II. Capturing Scenarios of Repeated Endotoxin Administration.” Journal of Theoretical Biology 242 (1): 237–56. https://doi.org/10.1016/j.jtbi.2006.02.015.\n\n\nEdelstein-Keshet, Leah. 2005. Mathematical Models in Biology. Vol. 46. Classics in Applied Mathematics. Society for Industrial and Applied Mathematics (SIAM), Philadelphia, PA. https://doi.org/10.1137/1.9780898719147.\n\n\nGerlee, Philip. 2013. “The Model Muddle: In Search of Tumor Growth Laws.” Cancer Research 73 (8): 2407–11. https://doi.org/10.1158/0008-5472.CAN-12-4355.\n\n\nHerald, Meagan C. 2010. “General Model of Inflammation.” Bulletin of Mathematical Biology 72 (4): 765–79. https://doi.org/10.1007/s11538-009-9468-9.\n\n\nKot, Mark. 2001. Elements of Mathematical Ecology. Cambridge University Press, Cambridge. https://doi.org/10.1017/CBO9780511608520.\n\n\nReynolds, Angela, Jonathan Rubin, Gilles Clermont, Judy Day, Yoram Vodovotz, and G. Bard Ermentrout. 2006. “A Reduced Mathematical Model of the Acute Inflammatory Response. I. Derivation of Model and Analysis of Anti-Inflammation.” Journal of Theoretical Biology 242 (1): 220–36. https://doi.org/10.1016/j.jtbi.2006.02.016.\n\n\nSarapata, E. A., and L. G. de Pillis. 2014. “A Comparison and Catalog of Intrinsic Tumor Growth Models.” Bulletin of Mathematical Biology 76 (8): 2010–24. https://doi.org/10.1007/s11538-014-9986-y.\n\n\n\n\n",
      "last_modified": "2022-01-20T14:44:05-05:00"
    },
    {
      "path": "notes003.html",
      "title": "Course Notes 3",
      "description": "Introduction to Mathematical Modeling in Biomathematics\n",
      "author": [
        {
          "name": "Jason M. Graham",
          "url": "https://topicsinbiomath.netlify.app/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nOverview\nWhat is a Mathematical Model?\nMathematical Modeling\nFurther Reading\n\nOverview\nAt this point, we have introduced the basic work flow that is often followed in the practice of biomathematics. Key components of the biomathematics work flow is the construction of a mathematical model and the use of the model to try to solve a problem or answer a question stemming from the life sciences. Mathematical modeling is the process of constructing or deriving a mathematical model. But what exactly is a mathematical model? We beleive that it is not very easy to answer this question in a way that is unique, definitive, and concise. However, we hope that as the course proceeds you will over time develop an internal understanding of what a mathematical model is and even gain some ability with building mathematical models in the context of biomathematics.\nWhat is a Mathematical Model?\nBefore we begin to address the question of what is a mathematical model, let’s spend some time focusing just on not-necessarily-mathematical models. Work in science and engineering often proceeds by employing models. What is a model? Consider the following quotation:\n\nA model is a rendition of a reality which is often too difficult or impossible to handle directly. A model is always a simplification, and a good model is one that captures the essential features of reality, leaving the unessential out (Calvetti and Somersalo 2013).\n\nA great example of a scientific model is the Bohr model for the atom. This model posits that an atom is made up of a small dense nucleus surrounded by orbiting electrons. This is a model because it does not include many atomic and nuclear details. It is a useful model because it leads to an explanation of certain chemical properties of atoms that could not be derived prior to the use of the Bohr model. Many biologists use model organisms to investigate the biological world. For example, people interested in understanding the evolution of social behavior study specific species of ants or bees. These insects are used because they are relatively easy to keep in a lab or to observe in nature and are also easy to manipulate experimentally. The use of animal models is also widespread in the study of disease and drug therapies.\nA mathematical model plays a similar role to models in the more general sense that we just described, but as you might imagine mathematical models are formulated and implemented mathematically. In the last lecture, we very briefly indicated two mathematical models. One for the growth of a population and another for certain cellular and molecular interactions that occur during inflammation. Let’s look at another example of a mathematical model, this time one coming from physics that is likely familiar to you from a course in ordinary differential equations.\nPhysics and mechanics in particular is often interested in the motion of a point particle. (Notice that point particles are an abstraction from reality.) Newton’s laws tell us, among other things, that the sum of all forces acting on a mass is proportional to the acceleration of the object. Furthermore, the constant of proportionality is the mass. In notation, we have that \\(F=ma\\). Now, while \\(F=ma\\) is an equation and you could reasonably argue that it is a “mathematical model” for how the physical world works, \\(F=ma\\) is not really representative of what we mean by a mathematical model in most instances. The reason is that it is a general statement, a theory and not a reference to something specific. However, we can use \\(F=ma\\) to construct mathematical models in more specific situations.\nSuppose for example that we are concerned with the motion of a particle of mass \\(m\\) attached to a spring. We can model the total force that is applied to the mass by the spring via the equation \\(F=-kx\\). This says that the force due to the spring is linearly proportional to the displacement of the mass from it’s equilibrium (resting) position. (Again, this is an abstraction from reality.) The constant of proportionality \\(k\\) is called the spring constant. It encodes physical properties of a spring such as its stiffness. Taken together with \\(F=ma\\) and using that acceleration is the second derivative of displacement we arrive at a mathematical model\n\\(\\frac{d^2 x}{dt^2} = -\\frac{k}{m}x.\\)\nThis is a model because it is based on several abstractions from reality and ignores some details such as more fine-grained details about the material properties of real world springs. It also assumes an ideal situation where there is no friction.\nAs you have seen in a differential equations course, or by using methods we will discuss later, it can be deduced based on the form of the equation \\(\\frac{d^2 x}{dt^2} = -\\frac{k}{m}x\\) that such a mass will oscillate with a fixed period and frequency determined by the values for \\(k\\) and \\(m\\). This leads us to another important point. There are several levels of “variable” involved in the model \\(\\frac{d^2 x}{dt^2} = -\\frac{k}{m}x\\). There is the independent variable \\(t\\) for time, the dependent variable for the unknown displacement \\(x\\) (the quantity we are ultimately most interested in), and there are the parameters \\(k\\) and \\(m\\).\nWe will see that most mathematical models involve parameters and it will become very important to understand how the values of parameters influence the results obtained from the model. Also very important is to note that variables and parameters correspond to quantities and thus have some set of units associated with them. We will spend a lot of time talking about why units of measurement are important but take note now that a mathematical model can not make sense if there is an inconsistency between units for parameters or variables.\nThe last example provides some insight into mathematical modeling, that is, the process of constructing or deriving a model. We begin with an abstraction from reality that represents those parts of the world in which we are most interested in, then we specify quantities that we want to relate, establish mathematical notation, and finally write down an equation that becomes our mathematical model. While our last example was very simple (too simple), it still serves to highlight the modeling process. The next section elaborates on this.\nMathematical Modeling\nIt is important to realize two facts about mathematical modeling, especially in the context of biomathematics, from the start:\nMathematical modeling is as much art as it is science. The point is that mathematical modeling is not routine or algorithmic. Successful modeling requires creativity and intuition developed through experience.\nMathematical modeling will almost certainly involve repeated refinements. Unless there is a very strong reason to do otherwise, it’s best to start with the simplest possible reasonable model, even at the risk of oversimplification. If the model produces incorrect or inaccurate results relative to the problem of interest, then the model can be revised in order to fix what is glaringly wrong.\nIn the next lecture, we will begin to address specific techniques that can help one to get started with mathematical modeling. Here we will provide a conceptual outline of the modeling process in the form of a series of steps that one typically carries out during the course of the modeling process.\nFormulate the question or state your problem. Explicitly write down assumptions and what is known about the system that you want to develop a model for.\nIdentify key quantities and define variables and parameters of interest. At this stage you should take careful note of the units of measurement that are associated with all of the model variables and parameters.\nDevelop a qualitative description of your model. Use diagrams or word equations to describe the relationships between variables. In the next lecture we will discuss compartment modeling which is a commonly used method for organizing the processes and interactions of variables in a way that helps one to more easily write down model equations.\nWrite down model equations corresponding to the qualitative description in the previous step. Perform dimensional analysis (covered in detail later) to make sure that there are no inconsistencies in your equations regarding units. At this stage it is very helpful to construct a table that lists all of the variables and parameters appearing in the model. The table should include the units of measurement for all of the variables and parameters as well as any specific parameters values that are known from experiment or the existing literature.\nNondimensionalize the model. Later we will cover nondimensionalization in detail. This is a process founded on the Buckinghma \\(\\pi\\) theorem in which variables and parameters are rescaled to remove units. This process is extremely important as it often simplifies the model by reducing the number of parameters and pinpoints the most significant parameters (or parameter combinations) in the model.\nAt this stage you will be ready to analyze or implement your model in order to obtain results such as qualitative or quantitative predictions. The next thing to do is determine if the model results are consistent with known information or experimental results. You have to do something to decide if your model is successful or should be revised in order to address your starting question or solve the problem you have posed.\nWith this overview in hand, the next lecture will cover compartment modeling and we will start to see concrete examples of mathematical models and the modeling process.\nFurther Reading\nFor general texts on mathematical modeling we recommend (Barnes and Fulford 2015; Calvetti and Somersalo 2013; Witelski and Bowen 2015). Both (Barnes and Fulford 2015; Calvetti and Somersalo 2013) provide good coverage of compartment modeling. Dimensional analysis is covered well in (Calvetti and Somersalo 2013; Witelski and Bowen 2015).\nA nice recent reference on mathematical modeling of biological systems is the chapter (Ayati 2019), which discusses modeling approaches in the context of microbial ecology.\n\n\n\nAyati, Bruce P. 2019. “Considerations for Modeling Proteus Mirabilis Swarming.” In Proteus Mirabilis, 285–96. Springer.\n\n\nBarnes, B., and G. R. Fulford. 2015. Mathematical Modelling with Case Studies. Third. Textbooks in Mathematics. CRC Press, Boca Raton, FL. https://mathscinet.ams.org/mathscinet-getitem?mr=3288754.\n\n\nCalvetti, Daniela, and Erkki Somersalo. 2013. Computational Mathematical Modeling. Mathematical Modeling and Computation. Society for Industrial and Applied Mathematics (SIAM), Philadelphia, PA. https://mathscinet.ams.org/mathscinet-getitem?mr=3013353.\n\n\nWitelski, Thomas, and Mark Bowen. 2015. Methods of Mathematical Modelling. Springer.\n\n\n\n\n",
      "last_modified": "2022-01-20T14:44:06-05:00"
    },
    {
      "path": "r_for_biomath.html",
      "title": "R for Biomathematics",
      "description": "An Introduction to R for Biomathematics\n",
      "author": [
        {
          "name": "Jason M. Graham",
          "url": "https://topicsinbiomath.netlify.app/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nComputation in Biomathematics\nWhat is R?\nWhy R?\nAn Introduction to R\nInstalling R and RStudio\nR as a Calculator\nData in R\nLinear Algebra in R\nFunctions in R\nR Packages\nVisualization in R\nNumerical Solution of Differential Equations in R\nPhase-Plane Methods in R\n\nConclusion\n\nComputation in Biomathematics\nAs in other scientific disciplines, numerical and scientific computing play a central role in biomathematics. For the purposes of Topics in Biomathematics, we are mainly interested in the numerical solution of mathematical problems, e.g., ordinary differential equations, and scientific visualization, e.g., plotting functions. Numerous computing platforms or environments are used in biomathematics. Some notable options include\nMATLAB or Octave,\nMaple,\nPython,\nXPPAUT,\nR, and\nJulia.\nThe purpose of this document is to provide an introduction to parts of the R computing ecosystem that are particularly useful for biomathematics.\nWhat is R?\nR is an open-source statistical computing platform that was developed as an alternative to proprietary statistical software. In the years since it’s initial release, R has become immensely popular and a vast ecosystem of open-source software has developed around R that greatly enhances it’s utility in science.\nWhy R?\nGiven many other options, why do we focus on R as the computing tool of choice in Topics in Biomathematics? The principal reasons are:\nR is free but also well-developed and widely-supported.\nEven though it was developed for statistical applications, R works well for numerical computing of the sort that is useful in biomathematics.\nThe RStudio integrated development environment (IDE) facilitates not only coding in R but also presenting and sharing results so as to align nicely with the course objective “Communicate effectively in writing their work in applying the techniques of applied mathematics to problems arising in the life sciences.”.\nMany biologists “speak” R and it is very helpful to have a common language when collaborating on interdisciplinary problems.\nAn Introduction to R\nIn what follows, we illustrate some R commands that will be used commonly throughout the Topics in Biomathematics course. This document is by no means comprehensive. The best ways to learn more about R are\nby using the swirl package, and\nsearching the web for specific topics.\nHere is a short video about swirl:\n\n\n\n\n\n\n\nInstalling R and RStudio\nR and RStudio are both free and easy to install. The videos below can serve as a helpful guide if you want to use them. Alternatively, you can access R and RStudio through a web browser without direct installation via RStudio Cloud. This does require an account but is free to set up.\nInstallation on Mac\nRead this article or watch this video:\n\n\n\n\n\n\n\nInstallation on PC\nRead this article or watch this video:\n\n\n\n\n\n\n\nRStudio Cloud\nHere is an intro to RStudio Cloud:\n\n\n\n\n\n\n\nR as a Calculator\nR can be used for basic arithmetic calculations:\n\n\n(1 + 2) # addition\n\n\n[1] 3\n\n(6 - 4) # subtraction \n\n\n[1] 2\n\n(3*5) # multiplication \n\n\n[1] 15\n\n(8/3) # division\n\n\n[1] 2.666667\n\n(2^3) # exponentiation\n\n\n[1] 8\n\nThere are also a number of mathematical functions:\n\n\n(exp(1))\n\n\n[1] 2.718282\n\n(log(1))\n\n\n[1] 0\n\n(log(exp(2)))\n\n\n[1] 2\n\n(log10(10))\n\n\n[1] 1\n\n(sin(pi/4))\n\n\n[1] 0.7071068\n\n(cos(pi/3))\n\n\n[1] 0.5\n\nSometimes it is convenient to store a value as a variable. The follow code stores the value of 3 as a variable x and then multiplies it by 1.5:\n\n\nx <- 3\n1.5*x\n\n\n[1] 4.5\n\nIn R, the notation <- is the assignment operator.\nYou can do arithmetic with variables just like you can with numbers. For example,\n\n\nx <- 3\ny <- 10\n(x + y)\n\n\n[1] 13\n\n(x*y)\n\n\n[1] 30\n\n(y^x)\n\n\n[1] 1000\n\nYou should always pay close attention to the order of operations when doing arithmetic in R. Use parentheses to make sure you compute what you mean to compute. For example,\n\n\n((3 - 2) * 6)\n\n\n[1] 6\n\nversus\n\n\n(3 - (2 * 6))\n\n\n[1] -9\n\nData in R\nThere are several common ways to represent different types of data in R. In this section we cover those that are most relevant to biomathematics.\nNumeric Vectors\nIn R, we create a vector or array of values using concatenation with the operator c. For example,\n\n\n(a <- c(1,5,-7))\n\n\n[1]  1  5 -7\n\ncreates a numeric vector with entries 1, 5, and -7, then we store the result as a variable called a.\nWe can perform arithmetic operations on vectors. For example,\n\n\nb <- c(2,-1,6)\n(a + b) # vector addition\n\n\n[1]  3  4 -1\n\n(a-b) # vector subtraction\n\n\n[1]  -1   6 -13\n\n(a*b) # elementwise vector multiplication \n\n\n[1]   2  -5 -42\n\n(a^b) # elementwise vector exponentiation \n\n\n[1]      1.0      0.2 117649.0\n\nQuestion: In the last code block, what is happening to produce the result corresponding to a^b?\nWe can also call math functions on vectors. For example,\n\n\nx <- c(1,2,3)\n(exp(x))\n\n\n[1]  2.718282  7.389056 20.085537\n\n(cos(pi*x))\n\n\n[1] -1  1 -1\n\nNote that these math functions are “vectorized” in that the operate elementwise on a vector.\nCharacter Vectors\nWe can also create so-called character vectors in R. For example,\n\n\n(A <- c(\"calculus\",\"linear algebra\", \"differential equations\"))\n\n\n[1] \"calculus\"               \"linear algebra\"        \n[3] \"differential equations\"\n\nWe won’t make extensive use of character vectors in Topics in Biomathematics but it is useful to know that they exist.\nMatrices in R\nThe matrix functions allows us to create a matrix in R. For example,\n\n\n(M <- matrix(c(1,2,3,4),2,2))\n\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\n(N <- matrix(c(1,2,3,4,5,6),2,3))\n\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n(P <- matrix(c(1,2,3,4,5,6),3,2))\n\n\n     [,1] [,2]\n[1,]    1    4\n[2,]    2    5\n[3,]    3    6\n\n(Q <- matrix(c(1,2,3,4,5,6),2,3,byrow=TRUE))\n\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n\nLists in R\nAll of the entries in a vector or a matrix must by of the same type. For example, all numeric values or all characters. In R, lists are a data structure that allow us to store data of mixed types. For example,\n\n\n(l1 <- list(c(1,2,3),c(\"jason\",\"graham\"),matrix(c(1,2,3,4),2,2)))\n\n\n[[1]]\n[1] 1 2 3\n\n[[2]]\n[1] \"jason\"  \"graham\"\n\n[[3]]\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\n(l2 <- list(initial=c(1,12),times=seq(0,10,by=1),values=matrix(1:22,11,2))) # list with names\n\n\n$initial\n[1]  1 12\n\n$times\n [1]  0  1  2  3  4  5  6  7  8  9 10\n\n$values\n      [,1] [,2]\n [1,]    1   12\n [2,]    2   13\n [3,]    3   14\n [4,]    4   15\n [5,]    5   16\n [6,]    6   17\n [7,]    7   18\n [8,]    8   19\n [9,]    9   20\n[10,]   10   21\n[11,]   11   22\n\nNote that the entries of a list can be accessed using either indexing or names (provided that the list entries are named). For example,\n\n\n(l1[[2]])\n\n\n[1] \"jason\"  \"graham\"\n\n(l2[[1]])\n\n\n[1]  1 12\n\n(l2$initial)\n\n\n[1]  1 12\n\nIf a list has named elements, we can access the names using the names function. For example,\n\n\nnames(l2)\n\n\n[1] \"initial\" \"times\"   \"values\" \n\nHere is a helpful video on R lists:\n\n\n\n\n\n\n\nData Frames in R\nA data frame in R is a data structure that corresponds to something like a spreadsheet. A data frame is a special type of list object. You can think of a data frame as a cross between a list and a matrix. Here is how you ceate a data frame:\n\n\n(my_data <- data.frame(course=c(\"MATH 114\",\"MATH 221\",\"MATH 222\",\"MATH 351\", \"MATH 341\"),\n                       num_students=c(10,12,8,5,7),\n                       level=c(\"F\",\"F\",\"S\",\"S\",\"T\")))\n\n\n    course num_students level\n1 MATH 114           10     F\n2 MATH 221           12     F\n3 MATH 222            8     S\n4 MATH 351            5     S\n5 MATH 341            7     T\n\nNote that a data frame contains rows and columns, every column is a vector (either numeric or character), and every column has the same number of entries. The columns of a data frame all have names. We can also use the names function to determine the column names of a data frame. For example,\n\n\nnames(my_data)\n\n\n[1] \"course\"       \"num_students\" \"level\"       \n\nTypically we do not create a data frame by hand, but data is often read in as a data frame. The principal use of data frames in R is that they are the best way to provide data to plotting functions.\nHere is a helpful video on R data frames:\n\n\n\n\n\n\n\nLinear Algebra in R\nLinear algebra plays a central role in solving problem in biomathematics. This section demonstrates some linear algebra computations that will be used frequently in Topics in Biomathematics performed in R.\nMatrix Arithmetic\nIf \\(A\\) and \\(B\\) are matrices of the same size then we can add them. Matrix addition is computed elementwise. We demonstrate this in R.\n\n\n(A <- matrix(c(1,2,-1,3,1,0,2,-1,2),3,3,byrow = TRUE))\n\n\n     [,1] [,2] [,3]\n[1,]    1    2   -1\n[2,]    3    1    0\n[3,]    2   -1    2\n\n(B <- matrix(c(3,2,-1,2,1,-1,2,-3,1),3,3,byrow = TRUE))\n\n\n     [,1] [,2] [,3]\n[1,]    3    2   -1\n[2,]    2    1   -1\n[3,]    2   -3    1\n\nA + B # matrix addition\n\n\n     [,1] [,2] [,3]\n[1,]    4    4   -2\n[2,]    5    2   -1\n[3,]    4   -4    3\n\nWe can also multiply a matrix by a number (scalar multiplication). In R\n\n\n3 * A\n\n\n     [,1] [,2] [,3]\n[1,]    3    6   -3\n[2,]    9    3    0\n[3,]    6   -3    6\n\nRecall that if \\(A\\) is an \\(m\\times n\\) matrix and \\(B\\) is an \\(n \\times p\\) matrix, then we can form the matrix product \\(AB\\) which will be a matrix of size \\(m\\times p\\). We demonstrate this in R.\n\n\n(A <- matrix(c(1,2,-1,3,1,0,2,-1,2),3,3,byrow = TRUE))\n\n\n     [,1] [,2] [,3]\n[1,]    1    2   -1\n[2,]    3    1    0\n[3,]    2   -1    2\n\n(B <- matrix(c(3,2,-1,2,1,-1),3,2,byrow = TRUE))\n\n\n     [,1] [,2]\n[1,]    3    2\n[2,]   -1    2\n[3,]    1   -1\n\nA %*% B # matrix multiplication\n\n\n     [,1] [,2]\n[1,]    0    7\n[2,]    8    8\n[3,]    9    0\n\nA special case of matrix multiplication is matrix-vector multiplication. For example,\n\n\n(v <- c(1,-1,1))\n\n\n[1]  1 -1  1\n\nA %*% v # matrix-vector multiplication \n\n\n     [,1]\n[1,]   -2\n[2,]    2\n[3,]    5\n\nMatrix Transpose and Determinant\nIn R, the transpose of a matrix is obtained as follows:\n\n\nt(B)\n\n\n     [,1] [,2] [,3]\n[1,]    3   -1    1\n[2,]    2    2   -1\n\nand the determinant of a square matrix is computed as\n\n\ndet(A)\n\n\n[1] -5\n\nEigenvalues and Eigenvectors\nRecall that if \\(A\\) is a square matrix (\\(n\\times n\\)), then an eigenvalue-eigenvector pair is a number \\(\\lambda\\) and a non-zero vector \\(v\\) satisfying \\(Av=\\lambda v\\). In R, we can compute the eigenvalues and eigenvectors for a square matrix as\n\n\n(evals_evects <- eigen(A))\n\n\neigen() decomposition\n$values\n[1]  3.1986912  1.7135379 -0.9122292\n\n$vectors\n           [,1]      [,2]       [,3]\n[1,] -0.5640780 0.1133046  0.4488745\n[2,] -0.7696551 0.4763782 -0.7042167\n[3,] -0.2990769 0.8719093 -0.5500823\n\nNote that the result is an R list that consists of\na vector that contains the eigenvalues, and\na matrix, the columns of which are the eigenvectors.\nIt is a fact from linear algebra that the determinant of a square matrix is the product of its eigenvalues. Let’s confirm this with our example matrix:\n\n\n(det(A))\n\n\n[1] -5\n\n(prod(evals_evects$values))\n\n\n[1] -5\n\nLet’s also confirm that \\(Av=\\lambda v\\) for the first eigenvalue-eigenvector pair we just computed.\n\n\n(A %*% evals_evects$vectors[ ,1])\n\n\n           [,1]\n[1,] -1.8043114\n[2,] -2.4618891\n[3,] -0.9566547\n\n(evals_evects$values[1] * evals_evects$vectors[ ,1])\n\n\n[1] -1.8043114 -2.4618891 -0.9566547\n\nFunctions in R\nA function is a programming construct that takes some number of inputs (possibly zero), performs some operations, and returns a value (which may be null). Writing functions is useful in general because it saves from having to rewrite the same code over and over again, makes code easier to read, and facilitates reproducibility. Additionally, code to compute numerical solutions to differential equations requires us to write a function specifying the differential equation. Thus, we are motivated to learn a little about writing functions in R. Suppose we want to create a function that inputs a number, multiplies that number by 2, and returns the result. Here is how you do this:\n\n\nmult_by_two <- function(x){\n  return(2*x)\n}\n\n\n\nLet’s call our function:\n\n\nmult_by_two(3)\n\n\n[1] 6\n\nWe can also do the following:\n\n\nx <- 3\nmult_by_two(x)\n\n\n[1] 6\n\nWhat if we want to multiply by an arbitrary number? One way to do this is as follows:\n\n\nmult_by_a <- function(x,a=2){\n  return(a*x)\n}\n\n\n\nIn the function mult_by_a we have an optional argument with a default value. If a is not specified, we multiply by 2, if a value for a is given then it is used. For example:\n\n\n(mult_by_a(3))\n\n\n[1] 6\n\n(mult_by_a(3,a=4)) # a is given by name\n\n\n[1] 12\n\nx <- 4\na <- 6\n(mult_by_a(x))\n\n\n[1] 8\n\n(mult_by_a(x,a)) # a is given by position \n\n\n[1] 24\n\nLet’s try something a little more interesting. Suppose we want to compute the value of an arbitrary polynomial function. Since the coefficients uniquely determine the polynomial and since R can perform vectorized operations, we can do the following:\n\n\npoly_func <- function(x,coeff_vect=c(1)){\n  degree <- length(coeff_vect) - 1 \n  powers <- 0:degree\n  x_powers <- x^powers\n  return(sum(coeff_vect*x_powers))\n}\n\n\n\nLet’s test our function:\n\n\n(poly_func(2))\n\n\n[1] 1\n\n(poly_func(2,coeff_vect=c(3)))\n\n\n[1] 3\n\n(poly_func(2,coeff_vect=c(0,1)))\n\n\n[1] 2\n\n(poly_func(2,coeff_vect=c(0,0,1)))\n\n\n[1] 4\n\n(poly_func(2,coeff_vect=c(1,2,3)))\n\n\n[1] 17\n\nLater we will see more examples of functions in R. In you want to learn more before then, here is a helpful video on writing functions in R:\n\n\n\n\n\n\n\nR Packages\nR packages extend the functionality of R by implementing functions for various tasks. Packages must be installed before they can be used. Installing packages is easy to do. Either use the install.packages function or in RStudio use the Install icon on the Packages tab.\nOnce you have installed the package or packages you want to use, you can load them with the library function. For Topics in Biomathematics we will make heavy use of the plotting packages ggplot2 and ggformula, and the packages deSolve and phaseR for working with differential equations. To install these packages one can use\n\n\ninstall.packages(c(\"ggplot2\",\"ggformula\",\"deSolve\",\"phaseR\"))\n\n\n\nYou only ever have to install a package once. To load these packages, you run\n\n\nlibrary(ggplot2)\nlibrary(ggformula)\nlibrary(deSolve)\nlibrary(phaseR)\n\n\n\nPackages must be loaded every time you begin a new R session.\nVisualization in R\nWhen you present your work you should use figures and plots to clearly convey your results. As mentioned, the two packages ggplot2 and ggformula make it possible to create high-quality plots in R. These packages are powerful and extensive so we will not be able to cover their full functionality here. Hopefully what is included here is enough to get you started, at least for the purposes of Topics in Biomathematics. It should be noted that ggformula is built on top of ggplot2.\nPlotting a Function\nHere are two ways to plot a simple mathematical function of the form \\(y=f(x)\\) in R:\nSuppose we want to plot \\(f(x) = x\\cos(x)\\) over \\([0,4\\pi]\\). Then we can do\n\n\ngf_function(fun = function(x){x*cos(x)},xlim=c(0,4*pi))\n\n\n\n\nor\n\n\nggplot(data.frame(x=c(0,4*pi)),aes(x=x)) + \n  geom_function(fun = function(x){x*cos(x)})\n\n\n\n\nWe can modify our plots in various ways. For example,\n\n\ngf_function(fun = function(x){x*cos(x)},xlim=c(0,4*pi),color=\"blue\",lwd=2)\n\n\n\n\nor\n\n\nggplot(data.frame(x=c(0,4*pi)),aes(x=x)) + \n  geom_function(fun = function(x){x*cos(x)},color=\"blue\",lwd=2)\n\n\n\n\nMore on Plots\nIt is possible to create a variety of different types of plots using ggplot2 and ggformula, and plots creating using these packages can be highly customized. As we go through the Topics in Biomathematics course we will learn a little more about the utility of these packages. For now, we refer anyone interested to learn more to this helpful video on ggplot2:\n\n\n\n\n\n\n\nThis article provides more information on ggformula.\nNumerical Solution of Differential Equations in R\nA problem that we will often encounter is to obtain a numerical solution to an initial value problem (IVP) for an ordinary differential equation (ODE) or a system of ordinary differential equations (ODEs). An IVP for an ODE or ODEs typically takes the form\n\\(\\frac{d{\\bf x}}{dt} = {\\bf F}({\\bf x}(t),t)\\),\n\\({\\bf x}(t_{0}) = {\\bf x}_{0}\\).\nHere \\({\\bf x}\\) is the unknown function of time and \\({\\bf F}\\) is the right hand side function. These may be scalars (in case of a single ODE) or vectors (in case of a system of ODEs). First, we will focus on the case of solving a single scalar ODE, then we will examine systems on ODEs.\nFor example, we might want to obtain a numerical solution to\n\\(\\frac{dN}{dt} = r N\\),\n\\(N(0) = 10\\),\nwith \\(r=0.5\\) and over the time interval \\([0, 5]\\).\nIn order to obtain a numerical solution to an IVP for ODEs we must provide at minimum the following information to the computer:\nA function that describes the right hand side \\({\\bf F}({\\bf x}(t),t)\\). Note that \\({\\bf F}\\) may involve parameters whose values will also need to be specified.\nA time interval, \\([t_{0},t_{f}]\\), over which to obtain a numerical solution.\nInitial conditions \\({\\bf x}_{0}\\).\nFinally, once we have obtained numerical solutions to an IVP for ODEs it is typically desirable to plot these solutions in one way or another. We will also see examples of ways to plot our numerical solutions in R.\nSolving a Single ODE\nTo use the methods described in this section you must make sure that the deSolve package is installed and loaded. The main function for obtaining numerical solutions in the deSolve package is the ode function. In order to use it, we must write a function in R syntax that describes the right hand side of our differential equation. Let’s do this for our example problem\n\\(\\frac{dN}{dt} = r N\\),\n\\(N(0) = 10\\),\nwith \\(r=0.5\\) and over the time interval \\([0, 5]\\).\n\n\nMy_RHS <- function(t,state,parameters){\n  with(as.list(c(state,parameters)),{\n    dN <- r*N\n    \n    list(c(dN))\n  })\n}\n\n\n\nIn addition to describing the right hand side of the differential equation, we must also specify the times at which to obtain the numerical solution and the initial condition. This is done as follows:\n\n\nstate <- c(N=10)\ntimes <- seq(0,5,by=0.1)\n\n\n\nNow we are ready to obtain the numerical solution:\n\n\nsolN <- ode(y=state,times=times,func=My_RHS,parms=c(r=0.5))\n\n\n\nLet’s look at what has been returned by our call to the numerical solver, the results of which are stored in the variable solN.\n\n\nsolN\n\n\n   time         N\n1   0.0  10.00000\n2   0.1  10.51272\n3   0.2  11.05171\n4   0.3  11.61834\n5   0.4  12.21403\n6   0.5  12.84026\n7   0.6  13.49859\n8   0.7  14.19068\n9   0.8  14.91825\n10  0.9  15.68313\n11  1.0  16.48722\n12  1.1  17.33254\n13  1.2  18.22120\n14  1.3  19.15542\n15  1.4  20.13754\n16  1.5  21.17001\n17  1.6  22.25542\n18  1.7  23.39648\n19  1.8  24.59604\n20  1.9  25.85711\n21  2.0  27.18283\n22  2.1  28.57652\n23  2.2  30.04167\n24  2.3  31.58194\n25  2.4  33.20118\n26  2.5  34.90344\n27  2.6  36.69298\n28  2.7  38.57427\n29  2.8  40.55202\n30  2.9  42.63116\n31  3.0  44.81691\n32  3.1  47.11472\n33  3.2  49.53034\n34  3.3  52.06982\n35  3.4  54.73950\n36  3.5  57.54605\n37  3.6  60.49650\n38  3.7  63.59822\n39  3.8  66.85897\n40  3.9  70.28690\n41  4.0  73.89059\n42  4.1  77.67904\n43  4.2  81.66173\n44  4.3  85.84862\n45  4.4  90.25017\n46  4.5  94.87740\n47  4.6  99.74186\n48  4.7 104.85574\n49  4.8 110.23181\n50  4.9 115.88351\n51  5.0 121.82499\n\nThe method from the deSolve package returns a matrix where the first column contains the time values at which we obtained numerical solution values and another column that contains the solution values corresponding to each of the time points. We can easily plot the solution values versus the time points as follows:\n\n\nplot(solN,col=\"blue\")\n\n\n\n\nA nicer plot can be obtained as follows:\n\n\nggplot(as.data.frame(solN),aes(x=time,y=N)) + geom_point()\n\n\n\n\nIf we want a curve instead:\n\n\nggplot(as.data.frame(solN),aes(x=time,y=N)) + geom_line(lwd=1)\n\n\n\n\nWe can plot the numerical solution together with the analytical solution \\(N(t) = 10e^{0.5 t}\\) as follows:\n\n\nggplot(as.data.frame(solN),aes(x=time,y=N)) + geom_point() + \n  geom_function(fun=function(t) 10*exp(0.5*t),color=\"blue\")\n\n\n\n\nExercise: Modify what we have done using the deSolve package to obtain and plot a numerical solution to the IVP\n\\(\\frac{dN}{dt} = r N\\),\n\\(N(0) = 5\\),\nwith \\(r=2.5\\) and over the time interval \\([0, 10]\\).\nSolving a System of ODEs\nConsider the following problem:\n\\(\\frac{dx}{dt}=-R_{0}xy\\)\n\\(\\frac{dy}{dt}=R_{0}xy - y\\)\nwith \\(R_{0} = 0.2\\) and \\(x_{0} = 0.95\\) and \\(y_{0} = 0.05\\).\nWe can code this system of ODEs in R as:\n\n\nMy_RHS <- function(t,state,parameters){\n  with(as.list(c(state,parameters)),{\n    dx <- -R0*x*y\n    dy <- R0*x*y - y\n    \n    list(c(dx,dy))\n  })\n}\n\n\n\nWe must specify our time interval and initial conditions:\n\n\nstate <- c(x=0.95,y=0.05)\ntimes <- seq(0,20,by=0.1)\n\n\n\nNow, we are ready to obtain the numerical solution:\n\n\nSIR_sol <- ode(y=state,times=times,func=My_RHS,parms=c(R0=0.2))\n\n\n\nAgain, the method from the deSolve package returns a matrix where the first column contains the time values at which we obtained numerical solution values and another column that contains the solution values corresponding to each of the time points. We can easily plot the solution values versus the time points as follows:\n\n\nplot(SIR_sol,col=\"blue\")\n\n\n\n\nQuestion: Again, what happens if we change the value of \\(R_{0}\\) to \\(R_{0}=1.5\\)?\nOften we want to have greater control over our plots and to be able to make high quality figures. The best way to do this in R is to use the capabilities of the ggplot2 package. In order to do this, we will first convert the matrix of solutions returned by the ode function from the deSolve package into a data frame. This is basically like an spread sheet format for data.\n\n\nSIR_sol_df <- as.data.frame(SIR_sol)\n\n\n\nWe can get a sense of the structure of this data by viewing the first few rows:\n\n\nhead(SIR_sol_df)\n\n\n  time         x          y\n1  0.0 0.9500000 0.05000000\n2  0.1 0.9490877 0.04610860\n3  0.2 0.9482474 0.04251971\n4  0.3 0.9474732 0.03921021\n5  0.4 0.9467598 0.03615738\n6  0.5 0.9461024 0.03334179\n\nIt is convenient to change the names of the columns to something more meaningful as follows:\n\n\nnames(SIR_sol_df) <- c(\"time\",\"susceptible\",\"infected\")\n\n\n\nLet’s look at the first few rows again:\n\n\nhead(SIR_sol_df)\n\n\n  time susceptible   infected\n1  0.0   0.9500000 0.05000000\n2  0.1   0.9490877 0.04610860\n3  0.2   0.9482474 0.04251971\n4  0.3   0.9474732 0.03921021\n5  0.4   0.9467598 0.03615738\n6  0.5   0.9461024 0.03334179\n\nNow, we can obtain plots by doing commands like:\n\n\nggplot(data=SIR_sol_df,mapping=aes(x=time,y=susceptible)) + geom_line()\n\n\n\n\nor\n\n\nggplot(data=SIR_sol_df,mapping=aes(x=time,y=infected)) + geom_line()\n\n\n\n\nHere are some other plotting alternatives:\n\n\n SIR_df_long <- pivot_longer(SIR_sol_df,-time,names_to = \"compartment\",values_to = \"population\")\nggplot(SIR_df_long,aes(x=time,y=population,color=compartment)) + geom_line(lwd=1)\n\n\n\n\nor\n\n\nggplot(SIR_df_long,aes(x=time,y=population)) + geom_line(lwd=1) + facet_wrap(~compartment)\n\n\n\n\nWe can also plot \\(x(t)\\) and \\(y(t)\\) together as parametric curves:\n\n\nggplot(SIR_sol_df,aes(x=susceptible,y=infected)) + geom_path(lwd=1)\n\n\n\n\nUsing color to indicate increasing values of time can be interesting:\n\n\nggplot(SIR_sol_df,aes(x=susceptible,y=infected,color=time)) + geom_path(lwd=1)\n\n\n\n\nThis color scale may not be the best, let’s change it:\n\n\nggplot(SIR_sol_df,aes(x=susceptible,y=infected,color=time)) + \n  geom_path(lwd=1) +\n  scale_color_viridis_c()\n\n\n\n\nThe book (Soetaert, Cash, and Mazzia 2012) covers much more on numerical computing with differential equations in R.\nPhase-Plane Methods in R\nThe phaseR package facilitates the mix of qualitative and quantitative methods for the analysis of 1- and 2-dimensional autonomous systems of ODEs. We illustrate its usage.\nPhaseR for Scalar Equations\nA first-order autonmous scalar ordinary differential equation is one with the general form\n\\(\\frac{dx}{dt} = f(x)\\),\nwhere \\(f(x)\\) is a continuous (usually even differentiable) function that does not depend explicitly on time \\(t\\) (this is the reason for the word autonomous). Most often, we are interested in the case when \\(f(x)\\) is a nonlinear function and we sometimes refer to \\(\\frac{dx}{dt} = f(x)\\) as a one-dimensional system.\nExample\nConsider as an example the equation\n\\(\\frac{dx}{dt} = x(1-x)\\).\nThe left hand side is the derivative \\(\\frac{dx}{dt}\\) and hence the (local) rate of change of \\(x\\) as a function of time \\(t\\). Therefore, because of the equal sign, \\(f(x)\\) must also provide information about the (local) rate of change of \\(x\\) but now for various “state” values, that is, values of \\(x\\).\nWe can use phaseR to analyze this problem.\nFirst we need to describe the differential equation:\n\n\nnondim_logistic <- function (t, x, parameters) \n{\n    list(x * (1 - x))\n}\n\n\n\nNow we plot what is called the phase portrait:\n\n\nnondim_logistic_phasePortrait <- phasePortrait(nondim_logistic,\n                                        ylim   = c(-0.5, 1.5),\n                                        points = 10,\n                                        frac   = 0.5)\n\n\n\n\nThe arrows here tell us, starting from an initial state value \\(x\\), whether the solution to the differential equation will increase as a function of time or decrease as a function of time.\nFurther, we can use phaseR to obtain some “trajectories” to our ODE:\n\n\nnondim_logistic_flow <- flowField(nondim_logistic,\n                                 xlim       = c(0, 10),\n                                 ylim       = c(-0.5, 1.5),\n                                 parameters = NULL,\n                                 points     = 15,\n                                 system     = \"one.dim\",add=FALSE)\nnondim_logistic_solutions <- trajectory(nondim_logistic,\n                                        y0   = c(0,0.5,1,1.5),\n                                        tlim=c(0,10),\n                                        system = \"one.dim\")\n\n\n\n\nThere is an general function in phaseR that will carry out a complete qualitative analysis for an autonomous system (either one-dimensional or two-dimensional). For example, call the following function in the R console:\n\n\nphasePlaneAnalysis(nondim_logistic,xlim = c(0,10),ylim = c(-1.5,1.5),system = \"one.dim\")\n\n\n\nPhaseR for Two-Dimensional Systems\nLet’s use phaseR to explore the dynamics of two-dimensional linear autonomous systems.\nConsider for example:\n\\(\\frac{d{\\bf x}}{dt} = A {\\bf x}\\),\nwhere \\(A\\) is a \\(2\\times 2\\) matrix of the form\n\\(A = \\left(\\begin{array}{cc} a & 0 \\\\ 0 & -1 \\end{array}\\right)\\).\nLet’s examine how various values of \\(a\\) change the dynamics (specifically the phase portraits) of the systems. Observe that as long as \\(a\\neq 0\\) there is a unique steady-state \\({\\bf x}^{\\ast}={\\bf 0}\\).\nPhase Portraits for Varying \\(a\\)\n\n\nsimple_linear <- function(t,state,parameters){\n  with(as.list(c(state,parameters)),{\n    dx <- a*state[1]\n    dy <- -state[2]\n    \n    list(c(dx,dy))\n  })\n}\n\n\n\n\n\na_val <- -2\n\n\n\n\n\nsimpleLinear_flowField  <- flowField(simple_linear,\n                                       xlim       = c(-2, 2),\n                                       ylim       = c(-2, 2),\n                                       parameters = c(a=a_val),\n                                       points     = 19,\n                                       add = FALSE)\n\n\n\n\nLet’s add some solution curves:\n\n\nsimpleLinear_flowField  <- flowField(simple_linear,\n                                       xlim       = c(-2, 2),\n                                       ylim       = c(-2, 2),\n                                       parameters = c(a=a_val),\n                                       points     = 19,\n                                       add = FALSE)\nstate                        <- matrix(c(1,1,1,-1,-1,1,-1,-1,0,2,0,-2,-1,0,1,0),\n                                    8, 2, byrow = TRUE)\nsimpleLinear_trajectory <- trajectory(simple_linear,\n                                        y0         = state,\n                                        tlim       = c(0, 10),\n                                        parameters = c(a=a_val),add=TRUE)\n\n\n\n\nLet’s plot the numerical solutions as a function of time for specific initial conditions:\n\n\nstate <- c(x=1,y=1)\ntimes <- seq(0,10,by=0.05)\nsimple_linear_sol <- ode(y=state,times=times,func=simple_linear,parms=c(a=a_val))\nplot(simple_linear_sol,col=\"blue\")\n\n\n\n\nTwo-dimensional Non-Linear Autonomous Systems\nGenerally, a two-dimensional autonomous system has the form\n\\[\n\\begin{align*}\n\\frac{dx}{dt} &= f(x,y) \\\\\n\\frac{dy}{dt} &= g(x,y), \n\\end{align*}\n\\] Such as system is sometimes called a vector field.\nLet’s adapt our code to examine some phase portraits for a nonlinear system.\n\n\nnon_linear <- function(t,state,parameters){\n  with(as.list(c(state,parameters)),{\n    x <- state[1]\n    y <- state[2]\n    dx <- -x + x^3\n    dy <- -2*y\n    \n    list(c(dx,dy))\n  })\n}\n\n\n\nFirst we plot the vector field:\n\n\nnonLinear_flowField  <- flowField(non_linear,\n                                       xlim       = c(-2, 2),\n                                       ylim       = c(-2, 2),\n                                       parameters = NULL,\n                                       points     = 19,\n                                       add = FALSE)\n\n\n\n\nNow we can obtain a more detailed picture of the phase portrait:\n\n\nnonLinear_flowField  <- flowField(non_linear,\n                                       xlim       = c(-2, 2),\n                                       ylim       = c(-2, 2),\n                                       parameters = NULL,\n                                       points     = 19,\n                                       add = FALSE)\nnonLinear_nullclines <- nullclines(non_linear,\n                                        xlim       = c(-2, 2),\n                                        ylim       = c(-2, 2),\n                                        parameters = NULL,\n                                        points     = 500)\nstate                        <- matrix(c(1.5,1,1.5,-1,-1.5,1,-1.5,-1,\n                                         -0.5,1,0.5,1,-0.5,-1,0.5,-1,-1,0,1,0,0,0),\n                                    11, 2, byrow = TRUE)\nnonLinear_trajectory <- trajectory(non_linear,\n                                        y0         = state,\n                                        tlim       = c(0, 10),\n                                        parameters = NULL,add=TRUE)\n\n\n\n\nObserve that steady-states occur where nullclines intersect.\nLet’s look at the solution curves \\(x(t)\\) and \\(y(t)\\):\n\n\nstate <- c(x=-0.5,y=1)\ntimes <- seq(0,10,by=0.05)\nnon_linear_sol <- ode(y=state,times=times,func=non_linear,parms=NULL)\nplot(non_linear_sol,col=\"blue\")\n\n\n\n\nYou can learn more about the functionality of phaseR by reading this page or this article.\nConclusion\nWe have very briefly touched on the basics of R that is useful in Topics in Biomathematics. If there are specific topics that interest you or there is a specific type of problem you want to try to use R to solve, we recommend searching the web as there is a plethora of tutorials, documentation, and helpful discussions to be found online.\n\n\n\nSoetaert, Karline, Jeff Cash, and Francesca Mazzia. 2012. Solving Differential Equations in R. Use r! Springer, New York. https://doi.org/10.1007/978-3-642-28070-2.\n\n\n\n\n",
      "last_modified": "2022-01-20T14:44:22-05:00"
    }
  ],
  "collections": []
}
